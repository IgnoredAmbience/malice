#!/bin/sh
tmp=/tmp/malice-`date +%s`
tooldir=`dirname $0`
mkdir $tmp

count=0
compile=0
pass=0

#iterate all alice programs
for ex in ${1%%/}/*.alice; do
  count=$((count+1))
  file=`basename $ex`
  $tooldir/compile $ex ${ex%%.alice} 2> /dev/null
  echo $? > $tmp/${file%%.alice}.compilation-student

  # if alice program should not compile
  if [ "$(cat ${ex%%.alice}.compilation)" != "0" ]; then
    if [ "$(cat $tmp/${file%%.alice}.compilation-student)" != "0" ]; then
      pass=$((pass+1))
      compile=$((compile+1))
    else
      # student compiler missed errors
      echo "$file:"
      echo "  Compiling: FAIL (compilation should not have succeeded)"
      echo
    fi
  else
    if [ "$(cat $tmp/${file%%.alice}.compilation-student)" != "0" ]; then
      echo "$file:"
      echo "  Compiling: FAIL (compilation should have succeeded)"
      echo
    else
      compile=$((compile+1))

      #for each input data set
      for input in ${ex%%.alice}.*.input; do
        inputf=`basename $input`
        ${ex%%.alice} > $tmp/${inputf%%.input}.output-student < ${input}
        echo $? > $tmp/${inputf%%.input}.retvalue-student

        if cmp --silent ${input%%.input}.retvalue ${tmp}/${inputf%%.input}.retvalue-student && cmp --silent ${input%%.input}.output ${tmp}/${inputf%%.input}.output-student; then

          pass=$((pass+1))
        else
          echo "$file:"
          echo "  Testing $input: failed"
          echo
        fi
      done
    fi
  fi
done

echo "Autotest results: $pass/$compile/$count passed/compiled/total"

rm -Rf $tmp
